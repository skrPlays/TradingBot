# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/guides/building-and-testing-python
# For tutorial: https://www.youtube.com/watch?v=WTofttoD2xg&ab_channel=IndianPythonista
# For GitHub Actions: https://github.com/marketplace?type=actions

name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
 #  - name: Lint with flake8
 #    run: |
 #      # stop the build if there are Python syntax errors or undefined names
 #      flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
 #      # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
 #      flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Fix code quality and commit
    - uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: "python_alelo tests"
          use-pylint: false
          use-pycodestyle: false
          use-flake8: false
          use-black: false
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: ""
          extra-black-options: ""
          extra-mypy-options: ""
          extra-isort-options: ""
    - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Applying code formatter changes by black
          commit_user_name: auto-commit-bot
    - name: Test with pytest
      run: |
       pytest
 #   - name: Deploy to Heroku
 #     env:
 #       HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
 #       HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
 #     if: github.ref == 'refs/heads/master' && job.status == 'success'
 #     run: |
 #       git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
 #       git push heroku HEAD:master -f